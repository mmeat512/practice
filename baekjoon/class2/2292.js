const oneLine = require('../common/oneLine');

/**
 *
 * 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다.
 * 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.
 *
 * 1
 2* [1] 6 -> 1 (2 ~ 7) 1 (0) + 1 / 6 + 1 
 3* [3] 12 -> 2 (8 ~ 19) 6 (1) + 2 / 6 * (2 + 1) + 1
 4* [6] 18 -> 3 (20 ~ 37) 18 (1 + 2) + 2 / 6 * (3 + 2 + 1) + 1
 5* [10] 24 -> 4 (38 ~ 61) 36 (1 + 2 + 3) + 2 / 6 * (4 + 3 + 2 + 1) + 1
 6* [15] 30 -> 5 (62 ~ 91) 60 (1 + 2 + 3 + 4) + 2 / 6 * (5 + 4 + 3 + 2 + 1) + 1
 *
 * 13 -> 3
 * 58 -> 5
 * 1 2 3 4 5  6 
 * 0 1 3 6 10 15 
 * 0 1 3 10 
 */

function solution(input) {
  let number = Number(input);
  let line = 0;
  let count = 0;

  while (number <= line) {
    line = count * 6 + 2;
  }

  //   if (1 === number) return 1;

  //   while (number >= 0) {
  //     count += 1;
  //     number -= line;
  //     line += 6 * count;
  //   }

  return count;
}

oneLine(solution);
